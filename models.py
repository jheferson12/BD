from pydantic import BaseModel, Field
from typing import Optional

# Clase para crear un empleado
class EmployeeCreate(BaseModel):
    name: str = Field(..., description="Employee's name")
    position: str = Field(..., description="Employee's position")
    email: str = Field(..., description="Employee's email")
    phone: str = Field(..., description="Employee's phone")

# Clase que representa a un empleado, hereda de EmployeeCreate
class Employee(EmployeeCreate):
    employee_id: Optional[int] = Field(None, description="Employee ID")

    class Config:
        from_attributes = True

# Clase para crear un cliente
class CustomerCreate(BaseModel):
    name: str = Field(..., description="Customer's name")
    email: str = Field(..., description="Customer's email")
    phone: str = Field(..., description="Customer's phone")

# Clase que representa a un cliente, hereda de CustomerCreate
class Customer(CustomerCreate):
    customer_id: int = Field(..., description="Customer ID (autogenerated)")

    class Config:
        from_attributes = True



